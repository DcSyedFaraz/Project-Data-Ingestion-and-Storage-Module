services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    environment:
      - CLUSTER_NAME=local
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    ports:
      - "9870:9870"
      - "9000:9000"
    volumes:
      - namenode-data:/hadoop/dfs/name

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - HDFS_CONF_dfs_datanode_data_dir=file:///hadoop/dfs/data
    depends_on:
      - namenode
    ports:
      - "9864:9864"
    volumes:
      - datanode-data:/hadoop/dfs/data

  spark:
    image: bitnami/spark:3.5
    container_name: spark
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark
      - SPARK_MASTER_PORT=7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    depends_on:
      - namenode
      - datanode
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - ./batch_processing:/app/batch_processing
      - ./datasets:/app/datasets
      - ./model_serving/models:/app/models
      - ./.ivy:/ivy

  zookeeper:
    image: bitnami/zookeeper:3.7
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.2
    container_name: kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  ingestion:
    build:
      context: ./flask_app
      dockerfile: Dockerfile
    container_name: ingestion
    environment:
      - NAMENODE_URL=http://namenode:9870
      - HDFS_USER=hdfs
      - JWT_SECRET=supersecretkey
    ports:
      - "5000:5000"
    depends_on:
      - namenode

  model_serving:
    build:
      context: ./model_serving
      dockerfile: Dockerfile
    container_name: model_serving
    ports:
      - "6000:6000"
    depends_on:
      - ingestion

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=anothersecret
    depends_on:
      - model_serving

volumes:
  namenode-data:
  datanode-data:
